version: '3'

services:

  person:
    depends_on:
      - mongo
      - kafka
    build:
      context: ./FHIR/Person
      dockerfile: Dockerfile
    command: sh -c "/wait && yarn start"
    environment:
      SERVER_PORT: 3001
      MONGO_HOSTNAME: mongo
      RESOURCE_SERVER: http://localhost:3001/
      AUTH_SERVER_URI: http://myauthzserver.com
      CLIENT_ID: client
      CLIENT_SECRET: secret
      INTROSPECTION_URL: https://myauthzserver.com/introspect
      WAIT_HOSTS: kafka:9092
      WAIT_HOSTS_TIMEOUT: 300
      WAIT_SLEEP_INTERVAL: 30
      WAIT_HOST_CONNECT_TIMEOUT: 30
    ports:
      - "3001:3001"
    volumes:
      - ./FHIR/Person:/srv/src
    networks:
      default:

  patient:
    depends_on:
      - mongo
      - kafka
    build:
      context: ./FHIR/Patient
      dockerfile: Dockerfile
    command: sh -c "/wait && yarn start"
    environment:
      SERVER_PORT: 3000
      MONGO_HOSTNAME: mongo
      RESOURCE_SERVER: http://localhost:3000/
      AUTH_SERVER_URI: http://myauthzserver.com
      CLIENT_ID: client
      CLIENT_SECRET: secret
      INTROSPECTION_URL: https://myauthzserver.com/introspect
      WAIT_HOSTS: kafka:9092
      WAIT_HOSTS_TIMEOUT: 300
      WAIT_SLEEP_INTERVAL: 30
      WAIT_HOST_CONNECT_TIMEOUT: 30
    ports:
      - "3000:3000"
    volumes:
      - ./FHIR/Patient:/srv/src
    networks:
      default:

  practitioner:
    depends_on:
      - mongo
      - kafka
    build:
      context: ./FHIR/Practitioner
      dockerfile: Dockerfile
    command: sh -c "/wait && yarn start"
    environment:
      SERVER_PORT: 3014
      MONGO_HOSTNAME: mongo
      RESOURCE_SERVER: http://localhost:3014/
      AUTH_SERVER_URI: http://myauthzserver.com
      CLIENT_ID: client
      CLIENT_SECRET: secret
      INTROSPECTION_URL: https://myauthzserver.com/introspect
      WAIT_HOSTS: kafka:9092
      WAIT_HOSTS_TIMEOUT: 300
      WAIT_SLEEP_INTERVAL: 30
      WAIT_HOST_CONNECT_TIMEOUT: 30
    ports:
      - "3014:3014"
    volumes:
      - ./FHIR/Practitioner:/srv/src
    networks:
      default:

  relatedperson:
    depends_on:
      - mongo
      - kafka
    build:
      context: ./FHIR/RelatedPerson
      dockerfile: Dockerfile
    command: sh -c "/wait && yarn start"
    environment:
      SERVER_PORT: 3003
      MONGO_HOSTNAME: mongo
      RESOURCE_SERVER: http://localhost:3003/
      AUTH_SERVER_URI: http://myauthzserver.com
      CLIENT_ID: client
      CLIENT_SECRET: secret
      INTROSPECTION_URL: https://myauthzserver.com/introspect
      WAIT_HOSTS: kafka:9092
      WAIT_HOSTS_TIMEOUT: 300
      WAIT_SLEEP_INTERVAL: 30
      WAIT_HOST_CONNECT_TIMEOUT: 30
    ports:
      - "3003:3003"
    volumes:
      - ./FHIR/RelatedPerson:/srv/src
    networks:
      default:

  mongo:
    image: mongo:3.6.1
    ports:
      - "27021:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      default:

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181"     
    networks:
      default:
      
  kafka:
    depends_on:
      - zookeeper
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 172.20.0.6
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "
      createdCarePlan:1:1,
      createdCareTeam:1:1,
      createdCondition:1:1,
      createdDevice:1:1,
      createdPatient:1:1,
      createdPerson:1:1,
      createdPlanDefinition:1:1,
      createdPractitioner:1:1,
      createdActivityDefinition:1:1,
      createdObservation:1:1,
      getLinks:1:1,
      getCareTeams:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      default:
        ipv4_address: 172.20.0.6

volumes:
  mongo_data:
  
networks:
  default:
    ipam:
      config:
        - subnet: 172.20.0.0/24
